{"version":3,"sources":["parallaxContent.es6"],"names":["Carousel_core","options","_classCallCheck","this","self","$slider","$","selector","$slides","find","slides","create_slides_arr","thumbs","create_thumbs_arr","current_index","prev_index","play_interval","interval","slides_count","length","pagination","update_thumbs","play","remove","thumb_arr","each","push","element","slider_counter","slide","element_thumb_content","slide_settings","data","slides_counter","thumb_counter","forEach","index","console","log","pagination_el","counter","$pagination_el","i","append","on","go_to_index","clearInterval","setInterval","go_to","render","direction","html","item","removeClass","addClass","carousel_core"],"mappings":"6XAAMA,yBAEF,QAAAA,GAAYC,GAASC,gBAAAC,KAAAH,EAEjB,IAAII,GAAOD,KAGPE,EAAUC,EAAEL,EAAQM,UACpBC,EAAUH,EAAQI,KAAK,MAG3BL,GAAKM,OAASN,EAAKO,kBAAkBH,GAErCJ,EAAKQ,OAASR,EAAKS,oBASnBT,EAAKU,cAAgB,EACrBV,EAAKW,WAAa,KAClBX,EAAKY,cACLZ,EAAKa,SAAW,EAEhBb,EAAKc,aAAed,EAAKM,OAAOS,OAE5BlB,EAAQmB,YACRhB,EAAKgB,WAAWnB,EAAQmB,YAG5BhB,EAAKiB,gBAELjB,EAAKkB,wEAILhB,EAAE,qBAAqBiB,QAEvB,IAAIC,KASJ,OAPAlB,GAAE,eAAemB,KAAK,WAElBD,EAAUE,MACPC,QAASrB,EAAEH,UAIXqB,4CAGOhB,GAEd,GAAIoB,GAAiB,EAEjBlB,IAiBJ,OAfAF,GAAQiB,KAAK,SAASI,GAGlBnB,EAAOgB,MACHC,QAASrB,EAAEH,MAEX2B,sBAAuBxB,EAAE,kBAAmBsB,EAAiB,SAC7DG,eAAgBzB,EAAEH,MAAM6B,KAAK,oBAIjCJ,MAIGlB,0CAKP,GAAIN,GAAOD,KAEP8B,EAAiB,EACjBC,EAAgB,CAEpB9B,GAAKM,OAAOyB,QAAQ,SAASN,GAErBI,GAAkB7B,EAAKU,gBAEvBV,EAAKQ,OAAOsB,KAAiBE,MAAQH,GAIzCA,MAGJI,QAAQC,IAAIlC,EAAKQ,2CAGV2B,GAOP,IAAK,GALDnC,GAAOD,KACPqC,EAAU,EAEVC,EAAiBnC,EAAEiC,GAEdG,EAAI,EAAGA,EAAKtC,EAAKc,aAAcwB,IACpCD,EAAeE,OAAO,SAAUH,IAAW,UAG/CC,GAAeG,GAAG,QAAS,OAAQ,WAC/BxC,EAAKyC,YAAYvC,EAAEH,MAAMiC,0CAM7B,GAAIhC,GAAOD,IAEX2C,eAAc1C,EAAKY,eAEnBZ,EAAKY,cAAgB+B,YAAY,WAE7B3C,EAAK4C,MAAM,YAEI,IAAhB5C,EAAKa,yCAIR,GAAIb,GAAOD,IAEX2C,eAAc1C,EAAKY,8CAIRb,KAEN6C,MAAM,0CAIA7C,KAEN6C,MAAM,gDAGHZ,GACR,GAAIhC,GAAOD,IAGXC,GAAKU,cAAgBsB,EAErBhC,EAAK6C,uCAGHC,GAEF,GAAI9C,GAAOD,IAEXC,GAAKW,WAAaX,EAAKU,cAEN,WAAboC,EAEI9C,EAAKU,eAAiBV,EAAKM,OAAOS,OAAS,EAC3Cf,EAAKU,cAAgB,EAIrBV,EAAKU,gBAIS,YAAboC,IACqB,GAAtB9C,EAAKU,cACLV,EAAKU,cAAgBV,EAAKM,OAAOS,OAAS,EAI1Cf,EAAKU,iBAKbR,EAAE,kBAAkB6C,KAAK/C,EAAKU,eAE9BV,EAAK6C,0CAML,GAAI7C,GAAOD,IAEXC,GAAKM,OAAOyB,QAAQ,SAASiB,GACzBA,EAAKzB,QAAQ0B,YAAY,YAG7BjD,EAAKM,OAAON,EAAKU,eAAea,QAAQ2B,SAAS,SAWjD,KAAK,GAAIZ,GAAI,EAAGA,EAAItC,EAAKQ,OAAOO,OAAQuB,KAKxCtC,EAAKiB,yBA2BTkC,cAAgB,GAAIvD,gBAEpBO,SAAU,QACVa,WAAY","file":"parallaxContent.min.js","sourcesContent":["class Carousel_core {\n\n    constructor(options) {\n\n        let self = this;\n\n\n        let $slider = $(options.selector);\n        let $slides = $slider.find('div');\n\n\n        self.slides = self.create_slides_arr($slides);\n\n        self.thumbs = self.create_thumbs_arr();\n\n\n\n        // self.update_thumbs($slides);\n\n        // console.log(self.thumbs);\n\n\n        self.current_index = 0;\n        self.prev_index = null;\n        self.play_interval;\n        self.interval = 4;\n\n        self.slides_count = self.slides.length;\n\n        if (options.pagination) {\n            self.pagination(options.pagination);\n        }\n\n        self.update_thumbs();\n\n        self.play();\n    }\n\n    create_thumbs_arr(){\n        $('.thumb >div:eq(0)').remove();\n\n        let thumb_arr = [];\n\n        $('.thumb >div').each(function(){\n\n            thumb_arr.push({\n               element: $(this)\n            });\n        })\n\n        return thumb_arr;\n    }\n\n    create_slides_arr($slides){\n\n        let slider_counter = 0;\n\n        let slides = [];\n\n        $slides.each(function(slide){\n\n            // console.log($(this).data());\n            slides.push({\n                element: $(this),\n                // element_thumb: $('.thumb >div:eq('+ slider_counter  +')'),\n                element_thumb_content: $('.thumb >div:eq('+ slider_counter  +')>div'),\n                slide_settings: $(this).data('expandCarousel')\n\n            });\n\n            slider_counter++;\n\n        });\n\n        return slides;\n    }\n\n    update_thumbs(){\n\n        let self = this;\n\n        let slides_counter = 0;\n        let thumb_counter = 0;\n\n        self.slides.forEach(function(slide){\n\n            if (slides_counter != self.current_index) {\n\n                self.thumbs[thumb_counter++].index = slides_counter;\n            }\n\n\n            slides_counter++;\n        });\n\n        console.log(self.thumbs);\n    }\n\n    pagination(pagination_el) {\n\n        let self = this;\n        let counter = 0;\n\n        let $pagination_el = $(pagination_el);\n\n        for (let i = 0; i <  self.slides_count; i++) {\n            $pagination_el.append('<span>'+ counter++ +'</span>')\n        }\n\n        $pagination_el.on('click', 'span', function(){\n            self.go_to_index($(this).index())\n        });\n    }\n\n    play() {\n\n        let self = this;\n\n        clearInterval(self.play_interval);\n\n        self.play_interval = setInterval(() => {\n\n            self.go_to('forward');\n\n        }, self.interval * 1000);\n    }\n\n    stop() {\n        let self = this;\n\n        clearInterval(self.play_interval);\n    }\n\n    next() {\n        let self = this;\n\n        self.go_to('forward');\n    }\n\n    prev() {\n        let self = this;\n\n        self.go_to('backward');\n    }\n\n    go_to_index(index) {\n        let self = this;\n\n\n        self.current_index = index;\n\n        self.render();\n    }\n\n    go_to(direction) {\n\n        let self = this;\n\n        self.prev_index = self.current_index;\n\n        if (direction == 'forward') {\n\n            if (self.current_index == self.slides.length - 1) {\n                self.current_index = 0;\n            }\n\n            else {\n                self.current_index++;\n            }\n        }\n\n        else if (direction == 'backward') {\n            if (self.current_index == 0) {\n                self.current_index = self.slides.length - 1;\n            }\n\n            else {\n                self.current_index--;\n            }\n        }\n\n\n        $('#current-index').html(self.current_index);\n\n        self.render();\n\n    }\n\n    render(){\n\n        let self = this;\n\n        self.slides.forEach(function(item){\n            item.element.removeClass('active');\n        });\n\n        self.slides[self.current_index].element.addClass('active');\n\n\n        // $('.thumb div[data-index=\"' + self.current_index + '\"]').addClass('asdfasd');\n\n        // console.log(self.prev_index);\n\n        // self.thumbs[self.current_index].html( self.slides[self.prev_index].element_thumb_content);\n\n        // $('.thumb div[data-index=' + self.prev_index +']').addClass('asdf');\n\n        for (let i = 0; i < self.thumbs.length; i++) {\n\n        }\n\n\n        self.update_thumbs();\n\n\n        // self.slides.forEach(function(item){\n        //     item.element_thumb.removeClass('active');\n        // });\n\n\n        // self.slides[self.current_index].element_thumb.addClass('active');\n\n        // self.slides[self.current_index].element_thumb.append(self.slides[1].element_thumb.html());\n\n\n\n\n        // $('.main div').removeClass('active');\n\n        // $('.main div:eq(' + self.current_index + ')').addClass('active');\n\n\n        // $('.thumb >div').removeClass('active');\n        //\n        // $('.thumb >div:eq(' + self.current_index + ')').addClass('active');\n    }\n\n}\n\nlet carousel_core = new Carousel_core({\n\n    selector: '.main',\n    pagination: '.pagination'\n});"]}