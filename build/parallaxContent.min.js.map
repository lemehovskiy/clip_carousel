{"version":3,"sources":["parallaxContent.es6"],"names":["Carousel_core","options","_classCallCheck","this","self","$slider","$","selector","$slides","find","slides","create_slides_arr","thumbs","create_thumbs_arr","current_index","prev_index","play_interval","interval","slides_count","length","pagination","update_thumbs","remove","thumb_arr","each","push","element","slider_counter","slide","element_thumb_content","slide_settings","data","slides_counter","thumb_counter","forEach","index","pagination_el","counter","$pagination_el","i","append","on","go_to_index","clearInterval","setInterval","go_to","render","direction","html","item","removeClass","addClass","thumb","console","log","carousel_core"],"mappings":"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","file":"parallaxContent.min.js","sourcesContent":["class Carousel_core {\n\n    constructor(options) {\n\n        let self = this;\n\n\n        let $slider = $(options.selector);\n        let $slides = $slider.find('div');\n\n\n        self.slides = self.create_slides_arr($slides);\n\n        self.thumbs = self.create_thumbs_arr();\n\n\n        // self.update_thumbs($slides);\n\n        // console.log(self.thumbs);\n\n\n        self.current_index = 0;\n        self.prev_index = null;\n        self.play_interval;\n        self.interval = 4;\n\n        self.slides_count = self.slides.length;\n\n        if (options.pagination) {\n            self.pagination(options.pagination);\n        }\n\n        self.update_thumbs();\n\n        // self.play();\n    }\n\n    create_thumbs_arr() {\n        $('.thumb >div:eq(0)').remove();\n\n        let thumb_arr = [];\n\n        $('.thumb >div').each(function () {\n\n            thumb_arr.push({\n                element: $(this)\n            });\n        })\n\n        return thumb_arr;\n    }\n\n    create_slides_arr($slides) {\n\n        let slider_counter = 0;\n\n        let slides = [];\n\n        $slides.each(function (slide) {\n\n            // console.log($(this).data());\n            slides.push({\n                element: $(this),\n                // element_thumb: $('.thumb >div:eq('+ slider_counter  +')'),\n                element_thumb_content: $('.thumb >div:eq(' + slider_counter + ')>div'),\n                slide_settings: $(this).data('expandCarousel')\n\n            });\n\n            slider_counter++;\n\n        });\n\n        return slides;\n    }\n\n    update_thumbs() {\n\n        let self = this;\n\n        let slides_counter = 0;\n        let thumb_counter = 0;\n\n        self.slides.forEach(function (slide) {\n\n            if (slides_counter != self.current_index) {\n\n                self.thumbs[thumb_counter++].index = slides_counter;\n            }\n\n\n            slides_counter++;\n        });\n\n        // console.log(self.thumbs);\n    }\n\n    pagination(pagination_el) {\n\n        let self = this;\n        let counter = 0;\n\n        let $pagination_el = $(pagination_el);\n\n        for (let i = 0; i < self.slides_count; i++) {\n            $pagination_el.append('<span>' + counter++ + '</span>')\n        }\n\n        $pagination_el.on('click', 'span', function () {\n            self.go_to_index($(this).index())\n        });\n    }\n\n    play() {\n\n        let self = this;\n\n        clearInterval(self.play_interval);\n\n        self.play_interval = setInterval(() => {\n\n            self.go_to('forward');\n\n        }, self.interval * 1000);\n    }\n\n    stop() {\n        let self = this;\n\n        clearInterval(self.play_interval);\n    }\n\n    next() {\n        let self = this;\n\n        self.go_to('forward');\n    }\n\n    prev() {\n        let self = this;\n\n        self.go_to('backward');\n    }\n\n    go_to_index(index) {\n        let self = this;\n\n\n        self.current_index = index;\n\n        self.render();\n    }\n\n    go_to(direction) {\n\n        let self = this;\n\n        self.prev_index = self.current_index;\n\n        if (direction == 'forward') {\n\n            if (self.current_index == self.slides.length - 1) {\n                self.current_index = 0;\n            }\n\n            else {\n                self.current_index++;\n            }\n        }\n\n        else if (direction == 'backward') {\n            if (self.current_index == 0) {\n                self.current_index = self.slides.length - 1;\n            }\n\n            else {\n                self.current_index--;\n            }\n        }\n\n\n        $('#current-index').html(self.current_index);\n\n        $('#prev-index').html(self.prev_index);\n\n        self.render();\n\n        self.update_thumbs();\n\n    }\n\n    render() {\n\n        let self = this;\n\n        self.slides.forEach(function (item) {\n            item.element.removeClass('active');\n        });\n\n        self.slides[self.current_index].element.addClass('active');\n\n\n        // $('.thumb div[data-index=\"' + self.current_index + '\"]').addClass('asdfasd');\n\n        // console.log(self.prev_index);\n\n        // self.thumbs[self.current_index].html( self.slides[self.prev_index].element_thumb_content);\n\n        // $('.thumb div[data-index=' + self.prev_index +']').addClass('asdf');\n\n        self.thumbs.forEach(function (thumb) {\n            thumb.element.removeClass('test');\n        })\n\n\n        console.log(self.current_index);\n        console.log(self.thumbs);\n\n        console.log('current: '  + self.current_index);\n\n        self.thumbs.forEach(function (thumb) {\n\n            console.log(thumb.index);\n\n            if (thumb.index == self.current_index) {\n\n                thumb.element.addClass('test');\n                thumb.element.html(self.slides[self.prev_index].element_thumb_content)\n\n            }\n        })\n\n\n        // console.log(self.slides[self.prev_index].element_thumb_content);\n\n\n\n\n        // self.slides.forEach(function(item){\n        //     item.element_thumb.removeClass('active');\n        // });\n\n\n        // self.slides[self.current_index].element_thumb.addClass('active');\n\n        // self.slides[self.current_index].element_thumb.append(self.slides[1].element_thumb.html());\n\n\n        // $('.main div').removeClass('active');\n\n        // $('.main div:eq(' + self.current_index + ')').addClass('active');\n\n\n        // $('.thumb >div').removeClass('active');\n        //\n        // $('.thumb >div:eq(' + self.current_index + ')').addClass('active');\n    }\n\n}\n\nlet carousel_core = new Carousel_core({\n\n    selector: '.main',\n    pagination: '.pagination'\n});\n\n\n$('#next-slide').on('click', function(){\n    carousel_core.go_to('forward');\n})\n\n$('#prev-slide').on('click', function(){\n    carousel_core.go_to('backward');\n})"]}