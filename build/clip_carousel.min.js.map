{"version":3,"sources":["clip_carousel.es6"],"names":["ClipCarousel","options","_classCallCheck","this","self","settings","$","extend","autoplay_speed","animate_duration","autoplay","$slider","slider_selector","$slides","find","$thumbs","thumbs_selector","slides","create_slides_arr","thumbs","create_thumbs_arr","slider_width","slider_height","thumb_width","current_index","next_index","prev_index","animate_direction","play_interval","thumb_animation_tl","TimelineMax","slider_animation_tl","interval","slides_count","length","init_thumbs_index","get_slide_size","get_thumb_size","init_pagination_thumbs","play","on","go_to_index","data","element","outerWidth","outerHeight","window","thumb_height","remove","thumb_arr","each","push","slider_counter","slide","element_thumb_content","slide_settings","slides_counter","thumb_counter","forEach","clearInterval","setInterval","go_to","index","render","direction","set_animate_duration","slider_animation","thumb_animation","isActive","progress","set","className","fromTo","clip","thumb","append","next_thumb","current_thumb","photo_slider"],"mappings":"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","file":"clip_carousel.min.js","sourcesContent":["class ClipCarousel {\n\n    constructor(options) {\n\n        let self = this;\n\n\n        self.settings = $.extend({\n            autoplay_speed: 1,\n            animate_duration: 1,\n            autoplay: true\n        }, options);\n\n\n        let $slider = $(options.slider_selector);\n\n        let $slides = $slider.find('>div');\n\n        self.$thumbs = $(options.thumbs_selector);\n\n        self.slides = self.create_slides_arr($slides);\n\n        self.thumbs = self.create_thumbs_arr();\n\n        self.slider_width = 0;\n        self.slider_height = 0;\n\n        self.thumb_width = 0;\n        self.thumb_width = 0;\n\n        self.current_index = 0;\n        self.next_index = null;\n        self.prev_index = null;\n\n        self.animate_direction = 'forward';\n\n        self.play_interval;\n\n        self.thumb_animation_tl = new TimelineMax();\n        self.slider_animation_tl = new TimelineMax();\n\n\n        self.interval = self.settings.autoplay_speed + self.settings.animate_duration;\n\n        self.slides_count = self.slides.length;\n\n\n        self.init_thumbs_index();\n\n        self.get_slide_size();\n        self.get_thumb_size();\n\n        self.init_pagination_thumbs();\n\n        if (options.autoplay) {\n            self.play();\n        }\n\n    }\n\n\n    init_pagination_thumbs(){\n\n        let self = this;\n\n        self.$thumbs.find('>div').on('click', function(){\n            self.go_to_index($(this).data('slide_index'))\n        })\n    }\n\n\n    get_slide_size(){\n\n        let self = this;\n\n        self.slider_width = self.slides[0].element.outerWidth();\n        self.slider_height = self.slides[0].element.outerHeight();\n\n        $(window).on('resize', function(){\n            self.slider_width = self.slides[0].element.outerWidth();\n            self.slider_height = self.slides[0].element.outerHeight();\n        })\n\n    }\n\n    get_thumb_size(){\n\n        let self = this;\n\n        self.thumb_width = self.thumbs[0].element.outerWidth();\n        self.thumb_height = self.thumbs[0].element.outerHeight();\n\n        $(window).on('resize', function(){\n            self.thumb_width = self.thumbs[0].element.outerWidth();\n            self.thumb_height = self.thumbs[0].element.outerHeight();\n        })\n\n    }\n\n    create_thumbs_arr() {\n        let self = this;\n\n        self.$thumbs.find('>div:eq(0)').remove();\n\n        let thumb_arr = [];\n\n        self.$thumbs.find('>div').each(function () {\n\n            thumb_arr.push({\n                element: $(this)\n            });\n        })\n\n        return thumb_arr;\n    }\n\n    create_slides_arr($slides) {\n\n        let self = this;\n\n        let slider_counter = 0;\n\n        let slides = [];\n\n        $slides.each(function (slide) {\n\n            slides.push({\n                element: $(this),\n                element_thumb_content: self.$thumbs.find('>div:eq(' + slider_counter + ')>div'),\n                slide_settings: $(this).data('expandCarousel')\n            });\n\n            slider_counter++;\n\n        });\n\n        return slides;\n    }\n\n\n    init_thumbs_index() {\n\n        let self = this;\n\n        let slides_counter = 0;\n        let thumb_counter = 0;\n\n        self.slides.forEach(function () {\n\n            if (slides_counter != self.current_index) {\n\n                self.thumbs[thumb_counter].element.data('slide_index', slides_counter);\n\n                thumb_counter++;\n            }\n\n            slides_counter++;\n        });\n\n    }\n\n\n    play() {\n\n        let self = this;\n\n        clearInterval(self.play_interval);\n\n        self.play_interval = setInterval(() => {\n\n            self.go_to('forward');\n\n        }, self.interval * 1000);\n    }\n\n    stop() {\n        let self = this;\n\n        clearInterval(self.play_interval);\n    }\n\n    next() {\n        let self = this;\n\n        self.go_to('forward');\n    }\n\n    prev() {\n        let self = this;\n\n        self.go_to('backward');\n    }\n\n    go_to_index(index) {\n        let self = this;\n\n\n        self.next_index = index;\n\n        self.render();\n    }\n\n    go_to(direction) {\n\n        let self = this;\n\n        self.prev_index = self.next_index;\n\n        if (direction == 'forward') {\n\n            if (self.current_index == self.slides.length - 1) {\n                self.next_index = 0;\n            }\n\n            else {\n                self.next_index = self.current_index + 1;\n            }\n        }\n\n        else if (direction == 'backward') {\n            if (self.current_index == 0) {\n                self.next_index = self.slides.length - 1;\n            }\n\n            else {\n                self.next_index = self.current_index - 1;\n            }\n        }\n\n        self.render();\n    }\n\n    render() {\n\n        let self = this;\n\n\n        self.set_animate_duration();\n\n        self.slider_animation();\n        self.thumb_animation();\n\n\n        self.current_index = self.next_index;\n\n        self.next_index = null;\n\n    }\n\n    set_animate_duration(){\n\n        let self = this;\n\n        if (self.current_index == self.slides.length - 1 && self.next_index == 0) {\n            self.animate_direction = 'forward';\n        }\n\n        else if (self.current_index == 0 && self.next_index == self.slides.length - 1) {\n            self.animate_direction = 'backward';\n        }\n\n        else if (self.next_index > self.current_index) {\n            self.animate_direction = 'forward';\n        }\n        else {\n            self.animate_direction = 'backward';\n        }\n    }\n\n    slider_animation(){\n        let self = this;\n\n        if ( self.slider_animation_tl.isActive() === true ) {\n            self.slider_animation_tl.progress(1);\n        }\n\n        self.slider_animation_tl.set(self.slides[self.next_index].element, {className:'+=next'})\n\n        self.slider_animation_tl.set(self.slides[self.current_index].element, {className:'+=prev'})\n\n        if (self.animate_direction == 'forward') {\n            self.slider_animation_tl.fromTo(self.slides[self.current_index].element, self.settings.animate_duration,\n                {clip: 'rect(0, ' + self.slider_width + 'px, ' + self.slider_height + 'px, 0px)'},\n                {clip: 'rect(0, 0px,' + self.slider_height + 'px, 0px)'})\n        }\n        else {\n            self.slider_animation_tl.fromTo(self.slides[self.current_index].element, self.settings.animate_duration,\n                {clip: 'rect(0, ' + self.slider_width + 'px, ' + self.slider_height + 'px, 0px)'},\n                {clip: 'rect(0, ' + self.slider_width + 'px, ' + self.slider_height + 'px, ' + self.slider_width + 'px)'})\n        }\n\n\n        self.slider_animation_tl.set(self.slides[self.current_index].element, {className:'-=active'})\n        self.slider_animation_tl.set(self.slides[self.current_index].element, {className:'-=prev'})\n\n        self.slider_animation_tl.set(self.slides[self.current_index].element, {clip: 'rect(0, ' + self.slider_width + 'px, ' + self.slider_height + 'px, 0px)'})\n\n        self.slider_animation_tl.set(self.slides[self.next_index].element, {className:'-=next'})\n        self.slider_animation_tl.set(self.slides[self.next_index].element, {className:'+=active'})\n\n    }\n\n    thumb_animation(){\n\n        let self = this;\n\n        self.thumbs.forEach(function (thumb) {\n\n            if (thumb.element.data('slide_index') == self.next_index) {\n\n                if ( self.thumb_animation_tl.isActive() === true ) {\n                    self.thumb_animation_tl.progress(1);\n                }\n\n                thumb.element.append(self.slides[self.current_index].element_thumb_content);\n\n                let next_thumb = $(thumb.element).find('>div:eq(1)');\n                let current_thumb = $(thumb.element).find('>div:eq(0)');\n\n                self.thumb_animation_tl.set(current_thumb, {className:'+=prev'})\n                self.thumb_animation_tl.set(next_thumb, {className:'+=next'})\n\n                if (self.animate_direction == 'forward') {\n                    self.thumb_animation_tl.fromTo(current_thumb, self.settings.animate_duration,\n                        {clip: 'rect(0, ' + self.thumb_width + 'px, ' + self.thumb_height + 'px, 0px)'},\n                        {clip: 'rect(0, 0px,' + self.thumb_height + 'px, 0px)'})\n                }\n                else {\n                    self.thumb_animation_tl.fromTo(current_thumb, self.settings.animate_duration,\n                        {clip: 'rect(0, ' + self.thumb_width + 'px, ' + self.thumb_height + 'px, 0px)'},\n                        {clip: 'rect(0, ' + self.thumb_width + 'px,' + self.thumb_height + 'px, ' + self.thumb_width + 'px)'})\n                }\n\n                self.thumb_animation_tl.set(current_thumb, {className:'-=prev'})\n                self.thumb_animation_tl.set(current_thumb, {className:'-=active'})\n                self.thumb_animation_tl.set(next_thumb, {className:'-=next'})\n                self.thumb_animation_tl.set(next_thumb, {className:'+=active'})\n\n                self.thumb_animation_tl.set(current_thumb, {clip: 'rect(0, ' + self.thumb_width + 'px, ' + self.thumb_height + 'px, 0px)'})\n\n\n                thumb.element.data('slide_index', self.current_index)\n\n            }\n        })\n    }\n}\n\nlet photo_slider = new ClipCarousel({\n    slider_selector: '.photo-slider',\n    thumbs_selector: '.photo-slider-thumb'\n});\n\n\n$('#slide-next').on('click', function(){\n    photo_slider.go_to('forward');\n})\n\n$('#slide-prev').on('click', function(){\n    photo_slider.go_to('backward');\n})"]}